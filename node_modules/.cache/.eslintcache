[{"/home/priyanko/covid_quarantine_management_FE/src/index.js":"1","/home/priyanko/covid_quarantine_management_FE/src/App.js":"2","/home/priyanko/covid_quarantine_management_FE/src/reportWebVitals.js":"3","/home/priyanko/covid_quarantine_management_FE/src/components/allocateRoom.js":"4","/home/priyanko/covid_quarantine_management_FE/src/components/adminLogin.js":"5","/home/priyanko/covid_quarantine_management_FE/src/components/addRooms.js":"6","/home/priyanko/covid_quarantine_management_FE/src/components/addTestResult.js":"7","/home/priyanko/covid_quarantine_management_FE/src/components/Navbar.js":"8","/home/priyanko/covid_quarantine_management_FE/src/components/addMember.js":"9","/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js":"10","/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js":"11","/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js":"12","/home/priyanko/covid_quarantine_management_FE/src/url.js":"13"},{"size":593,"mtime":1651239002914,"results":"14","hashOfConfig":"15"},{"size":4925,"mtime":1651902951465,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1651239002914,"results":"17","hashOfConfig":"15"},{"size":3855,"mtime":1651902438004,"results":"18","hashOfConfig":"15"},{"size":3235,"mtime":1651902234260,"results":"19","hashOfConfig":"15"},{"size":3469,"mtime":1651902175565,"results":"20","hashOfConfig":"15"},{"size":3298,"mtime":1651902203525,"results":"21","hashOfConfig":"15"},{"size":3030,"mtime":1651744159658,"results":"22","hashOfConfig":"15"},{"size":4164,"mtime":1651901725055,"results":"23","hashOfConfig":"15"},{"size":4491,"mtime":1651902348502,"results":"24","hashOfConfig":"15"},{"size":5065,"mtime":1651902487743,"results":"25","hashOfConfig":"15"},{"size":5648,"mtime":1651902509014,"results":"26","hashOfConfig":"15"},{"size":162,"mtime":1651903740553,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1jqoef1",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"31"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/priyanko/covid_quarantine_management_FE/src/index.js",[],[],["77","78"],"/home/priyanko/covid_quarantine_management_FE/src/App.js",["79","80","81","82","83","84","85","86"],[],"/home/priyanko/covid_quarantine_management_FE/src/reportWebVitals.js",[],[],"/home/priyanko/covid_quarantine_management_FE/src/components/allocateRoom.js",["87","88","89","90","91","92","93","94"],[],"\nimport React,{Component} from 'react'\nimport {Form ,Button} from 'react-bootstrap'\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { Redirect } from 'react-router';\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n//import { Redirect } from 'react-router';\n\n\nclass AllocateRoomsPage extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            student_id : '',\n            res_data : {},\n            url:'',\n            room_id : this.props.match.params.room_id,\n            isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n        }\n        this.submitAllocateRooms = this.submitAllocateRooms.bind(this);\n        this.detailsChange = this.detailsChange.bind(this);\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    getCookie(cName) {\n        const name = cName + \"=\";\n        const cDecoded = decodeURIComponent(document.cookie); //to be careful\n        const cArr = cDecoded .split('; ');\n        let res;\n        cArr.forEach(val => {\n            if (val.indexOf(name) === 0) res = val.substring(name.length);\n        })\n        return res;\n      }\n\n      componentDidMount(){\n        console.log(tinyUrl());\n        this.setState({url:tinyUrl()});\n      }\n\n    submitAllocateRooms(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token=this.getCookie('admin_cookie')\n      const headers = {\n          \"Authorization\" : `Bearer ${token}`\n      };\n      \n      //axios.post('http://localhost:8095/allocate-room/'+this.state.student_id+'/'+this.props.match.params.room_id, {headers})\n        axios.post(this.state.url+'allocate-room/', this.state, {headers})\n       .then(response => \n         {\n            if(response.status==200){\n                alert(\"Room Allocated!\");\n              }\n              else if(response.status==500){\n                alert(\"Student has already been allocated\");\n                // this.setState({\n                //     res_data: response.data,\n                // })\n                 //alert(response.data);\n                 console.log(\"Already allocated\");\n                 console.log(response.data);\n              }\n         }\n      )\n    .catch(err=>{\n      console.log(err);\n      alert(\"Already allocated\");\n    });\n  }\n\n  detailsChange(event){\n    this.setState({\n        [event.target.name]:event.target.value\n    });\n}\n\n\n    render(){\n        if(this.state.isloggedin)\n        {\n        const {match,location,history} = this.props;\n        return (\n        \n            <div className=\"AllocateRooms\">\n              <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n                <h1>ALLOCATE ROOMS</h1>\n                <Form onSubmit = {this.submitAllocateRooms}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicstudentID\">\n                        <Form.Label>Enter Student Id</Form.Label>\n                        <Form.Control required type=\"text\" name=\"student_id\" value={this.state.student_id} onChange={this.detailsChange} /*placeholder=\"Your Name\"*/ />\n                    </Form.Group>\n\n\n                    <Button size=\"lg\" variant=\"primary\" type=\"submit\">\n                        Allocate Room\n                    </Button>\n                </Form>\n            </div>\n              \n        );\n        }\n        else{\n            return <Redirect to = {{ pathname: \"/\" }} />;\n          }\n    }\n\n}\n\n\n//export default DelegateConsentPage;\nconst AllocateRoomsWithRouter = withRouter(AllocateRoomsPage);\nexport default  AllocateRoomsWithRouter;\n\n    ","/home/priyanko/covid_quarantine_management_FE/src/components/adminLogin.js",["95","96"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass AdminLoginPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        email : '',\n        password : '',\n        url:'',\n        isLoggedIn: false\n    }\n    this.submitAdminLogin = this.submitAdminLogin.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n    \n  }\n\ncomponentDidMount(){\n  console.log(tinyUrl());\n  this.setState({url:tinyUrl()});\n}\n  //url = tinyUrl();\n  submitAdminLogin(event){\n    //console.log(this.state);\n    event.preventDefault();\n    const headers = { \n        \"Content-Type\": \"application/json\" ,\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n    };\n    \n    \n    //axios.post('http://localhost:8102/login-admin', this.state, { headers })\n    axios.post(this.state.url+'login-admin', this.state, { headers })\n    .then(response => \n      {\n        if(response.status==200){\n          //setting the cookie here\n          document.cookie = \"admin_cookie=\" + response.data;\n          this.setState({isLoggedIn : true});\n          console.log(\"Cookie set\");\n          alert(\"Admin Login Successful!\");\n          //console.log(this.getCookie('admin_cookie'));\n          \n        }\n      }\n    )\n    .catch(err=>{\n      console.log(err);\n      alert(\"Wrong Details! Enter the valid Details\");\n    });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n\n\n  render(){\n\n    if(!this.state.isLoggedIn){\n      return (\n        <div className=\"AdminLoginPage\">\n          <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n          <h1>LOGIN PAGE</h1>\n          <Form onSubmit={this.submitAdminLogin}>\n            <Form.Group size=\"lg\" className=\"form\" controlId=\"formBasicAdminEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                required\n                autoFocus\n                type=\"text\"\n                value={this.state.admin_email}\n                name = \"email\"\n                onChange={this.detailsChange}\n                placeholder = \"email\"\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" className=\"form\" controlId=\"formBasicAdminPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                value={this.state.admin_password}\n                onChange={this.detailsChange}\n                placeholder=\"password\"\n                name=\"password\"\n              />\n            </Form.Group>\n            <Button size=\"lg\" type=\"submit\">\n              Login\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n    }\n    else{\n      return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n  }\n\n}\n\nexport default AdminLoginPage;\n","/home/priyanko/covid_quarantine_management_FE/src/components/addRooms.js",["97","98","99","100"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './registration.css';\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass AddRoomsPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        roomNum : null,\n         floorNum : null,\n         url:'',\n         isloggedin : this.getCookie('admin_cookie')!=undefined ? true : false\n    }\n    this.submitAddRooms = this.submitAddRooms.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n  }\n\n\n   getCookie(cName) {\n     const name = cName + \"=\";\n     const cDecoded = decodeURIComponent(document.cookie); //to be careful\n     const cArr = cDecoded .split('; ');\n     let res;\n     cArr.forEach(val => {\n         if (val.indexOf(name) === 0) res = val.substring(name.length);\n     })\n     return res;\n   }\n   componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n\n  submitAddRooms(event){\n      const token=this.getCookie('admin_cookie');\n      console.log(this.state);\n      event.preventDefault();\n      // const token = this.getCookie('admin_cookie');\n      const headers = {\n        //'Access-Control-Allow-Origin':'*' \n        'Authorization': `Bearer ${token}` \n       };\n\n      \n      \n      // axios.post('http://localhost:8102/add-room', this.state)\n      axios.post(this.state.url+'add-room', this.state, {headers})\n      .then(response => \n        {\n          console.log(response.status)\n          if(response.status===200){\n            alert(\"Room Added!\");\n          }\n          else{\n            alert(\"Room already exists\");\n          }\n        }\n        \n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Room already exists\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    //if(this.state.isloggedin){\n      return (\n        <div className=\"AddRoomsPage\">\n          <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n          <h1>Add Rooms</h1>\n          <Form onSubmit={this.submitAddRooms}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicRoomNumber\">\n              <Form.Label>Room Number</Form.Label>\n              <Form.Control\n                required type=\"Number\"\n                value={this.state.roomNum}\n                name = \"roomNum\"\n                onChange={this.detailsChange}\n                placeholder = \"enter room number\"\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicFloorNumber\">\n              <Form.Label>Floor Number</Form.Label>\n              <Form.Control\n                required type=\"Number\"\n                value={this.state.floorNum}\n                onChange={this.detailsChange}\n                placeholder=\"enter floor number\"\n                name=\"floorNum\"\n              />\n            </Form.Group>\n            <Button size=\"lg\" type=\"submit\">\n              Add room\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n    // }\n    // else{\n    //   return <Redirect to = {{ pathname: \"/\" }} />;\n    // }\n\n  }\n}\n\nexport default AddRoomsPage;","/home/priyanko/covid_quarantine_management_FE/src/components/addTestResult.js",["101","102","103"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './addRooms.css';\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass AddTestResultPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        student_id : '',\n        result : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n    }\n    this.submitAddTestResult = this.submitAddTestResult.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n    \n  }\n\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n\n  componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n  submitAddTestResult(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token = this.getCookie('admin_cookie');\n      const headers = { \n          'Authorization': `Bearer ${token}` \n      };\n\n      \n      \n      axios.post(this.state.url+'add-test', this.state,{headers})\n      .then(response => \n        {\n          if(response.status==200){\n            alert(\"Result Added!\");\n          }\n          else{\n            alert(\"Result not added.Please Try Again\");\n          }\n          }\n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Test not added.Please Try Again\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    if(this.state.isloggedin){\n      return (\n        <div className=\"AddTestResultPage\">\n          <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n          <h1>Add Test Result</h1>\n          <Form onSubmit={this.submitAddTestResult}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicStudentId\">\n              <Form.Label>Student ID</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.student_id}\n                name = \"student_id\"\n                onChange={this.detailsChange}\n                placeholder = \"Enter student ID\"\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicResult\">\n              <Form.Label>Result</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.result}\n                onChange={this.detailsChange}\n                placeholder=\"Enter +VE / -VE / Pending\"\n                name=\"result\"\n              />\n            </Form.Group>\n            <Button size=\"lg\" type=\"submit\">\n              Add Test Result\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n     }\n    else{\n      return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n  }\n}\n\nexport default AddTestResultPage;","/home/priyanko/covid_quarantine_management_FE/src/components/Navbar.js",["104","105","106","107"],[],"import React, { useEffect, useState,useRef, useLayoutEffect } from \"react\";\nimport \"./navbar.css\";\n\n\nimport { NavLink } from \"react-router-dom\";\n \nlet isLoggedIn = false;\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nconst Navbar = () => {\n\n\n  \n  \n  \n  \n  let cookie;\n\n  const [showMediaIcons, setShowMediaIcons] = useState(false);\n  \n  useEffect(() =>{\n\n    \n      const cookie = getCookie(\"admin_cookie\");\n      console.log('test'+isLoggedIn)\n      if(cookie!=undefined){\n        isLoggedIn = true;\n      }\n      else{\n        isLoggedIn = false;\n      }\n    \n       \n  });\n  \n\n  console.log(isLoggedIn);\n  if(isLoggedIn){\n    return (\n      <>\n        <nav className=\"main-nav\">\n          {/* 1st logo part  */}\n          <div className=\"logo\">\n            <h2>\n              <span>C</span>ovid\n              <span>Q</span>UARANTINE\n            </h2>\n          </div>\n  \n          {/* 2nd menu part  */}\n          <div\n            className={\n              showMediaIcons ? \"menu-link mobile-menu-link\" : \"menu-link\"\n            }>\n            <ul>\n              <li>\n                <NavLink to=\"/\">Home</NavLink>\n              </li>\n\n              <li>\n                <NavLink to=\"/add-members\">Add Member</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/add-rooms\">Add Rooms</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/add-tests\">Add Test Results</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/free-room\">Room Allocation</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/deallocate-rooms\">Room Deallocation</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/positive-students\">Positive Students</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/logout\">Logout</NavLink>\n              </li>\n              \n            </ul>\n          </div>\n  \n          \n        </nav>\n      </>\n    );\n\n  }\n  else{\n    cookie = getCookie(\"admin_cookie\"); \n    if(cookie!=null){\n      isLoggedIn = true;\n      //alert(\"cookie there\");\n    }\n    else{\n      isLoggedIn = false;\n    } \n    console.log(\"Inside else case\");\n    console.log(cookie);\n    //setShowMediaIcons(true);\n\n    return (\n      <>\n        <nav className=\"main-nav\">\n          {/* 1st logo part  */}\n          <div className=\"logo\">\n            <h2>\n              <span>C</span>ovid\n              <span>Q</span>UARANTINE\n            </h2>\n          </div>\n  \n          {/* 2nd menu part  */}\n          <div\n            className={\n              showMediaIcons ? \"menu-link mobile-menu-link\" : \"menu-link\"\n            }>\n            <ul>\n\n              <li>\n                <NavLink to=\"/login-admin\">Admin Login</NavLink>\n              </li>\n            </ul>\n          </div>\n  \n          \n        </nav>\n      </>\n    );\n \n  }\n};\n\nexport default Navbar;\n","/home/priyanko/covid_quarantine_management_FE/src/components/addMember.js",["108","109","110"],[],"import React,{Component} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './registration.css';\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass AddMemberPage extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n        sName : '',\n        sEmail : '',\n        sRoll : '',\n        url:'',\n        sContact : '',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n\n    }\n    this.submitAddMember = this.submitAddMember.bind(this);\n    this.detailsChange = this.detailsChange.bind(this);\n  }\n\n  componentDidMount(){\n    console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n    const cArr = cDecoded .split('; ');\n    let res;\n    cArr.forEach(val => {\n        if (val.indexOf(name) === 0) res = val.substring(name.length);\n    })\n    return res;\n  }\n\n  submitAddMember(event){\n      console.log(this.state);\n      event.preventDefault();\n      const token = this.getCookie('admin_cookie');\n      const headers = { \n          'Authorization': `Bearer ${token}` \n      };\n  \n      \n      //axios.post('http://localhost:8102/add-member', this.state)\n      axios.post(this.state.url+'add-member', this.state,{headers})\n      .then(response => \n        {\n          if(response.status==200){\n            alert(\"Student Added!\");\n          }\n          else{\n            alert(\"Result not added.Please Try Again\");\n          }\n          }\n      )\n      .catch(err=>{\n        console.log(err);\n        alert(\"Already student exists\");\n      });\n  }\n\n  detailsChange(event){\n      this.setState({\n          [event.target.name]:event.target.value\n      });\n  }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n  };\n\n\n  render(){\n\n    \n    if(this.state.isloggedin){\n      return (\n        \n        <div className=\"AddMemberPage\">\n          <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n          <h1>Add Member</h1>\n          <Form onSubmit={this.submitAddMember}>\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicStudentName\">\n              <Form.Label>Student Name</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sName}\n                name = \"sName\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicEmailId\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sEmail}\n                name = \"sEmail\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicRollNumber\">\n              <Form.Label>Roll Number</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sRoll}\n                name = \"sRoll\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n\n            <Form.Group size=\"lg\" className=\"mb-3\" controlId=\"formBasicContactNumber\">\n              <Form.Label>Contact Number</Form.Label>\n              <Form.Control\n                required type=\"text\"\n                value={this.state.sContact}\n                name = \"sContact\"\n                onChange={this.detailsChange}\n                //placeholder = \"123\"\n              />\n            </Form.Group>\n        \n            <Button size=\"lg\" type=\"submit\">\n              Add Member\n            </Button>\n          </Form>\n  \n        </div>\n       \n      );\n    }\n    else{\n      return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n  }\n}\n\nexport default AddMemberPage;","/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js",["111","112","113","114","115","116","117"],[],"import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Button from \"react-bootstrap/Button\";\nimport './addtable.css'\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass FreeRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n  //   async getUsersData(){\n  //     const token = this.getCookie('admin_cookie');\n  //     const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //      const res2 = await axios.get('http://localhost:8095/get-freerooms')\n  //      {\n  //       headers: {\n  //         \"Authorization\" : `Bearer ${token}`\n  //       }\n  //     })\n  //     // const headers = {\n  //     //   \"Authorization\" : `Bearer ${token}`\n  //  // };\n  //      console.log(res2.data)\n  //     this.setState({loading:false, users: res2.data})\n  //   }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get(this.state.url+'get-freerooms',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    async getData(room_id){\n      // const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n      //   console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      this.setState({viewrooms:true});\n      //console.log(res);\n\n   }\n\n\n    componentDidMount(){\n      this.getUsersData()\n      console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n    }\n    render() {\n\n    if(this.state.isloggedin)\n    {\n    if(!this.state.viewrooms){\n          return (\n            \n            <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n            <MDBTableHead>\n            <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n              <tr>\n                <th>Available Room ID</th>\n                <th>Available Room Numbers</th>\n                <th>Available Floor Numbers</th>\n                <th>Allocate</th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.users.map((obj)=>(\n                 <tr>\n                    <td>{obj.room_id}</td>\n                    <td>{obj.roomNum}</td>\n                    <td>{obj.floorNum}</td>\n                    <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n  \n                              e.preventDefault();\n                              this.setState({room_id:obj.room_id})\n                              this.getData(obj.room_id)  ;\n                              \n                          }}\n                      >\n                          Allocate Room\n                      </Button>\n                    \n                    </td>\n                    \n  \n                </tr>   \t\t\n                \n                \n                ))\n              }\n      \n            </MDBTableBody>\n          </MDBTable>\n          )\n     \n    }\n    else{\n      \n      return <Redirect to = {{ pathname: \"/allocate-room/\" + this.state.room_id }} />;\n      \n    }\n  }\n  else\n  {\n    return <Redirect to = {{ pathname: \"/\" }} />;\n  }\n\n    }\n  }\n\nexport default FreeRoomsPage;","/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js",["118","119","120","121","122","123"],[],"import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\"\n//import viewEHR from './viewEHR.js';\nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport Button from \"react-bootstrap/Button\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport tinyUrl from '../url';\nimport './addtable.css'\nimport chatIcon from \"./IIITB_logo.png\";\n\nclass DeallocateRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        //getEhrResp : false,\n        pid : '',\n        cid : '',\n        url:'',\n        Vehr : false,\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false,\n        room_id : '',\n        viewrooms:false\n      }\n      this.call = this.call.bind(this);\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n\n    async componentDidMount(){\n      const token = this.getCookie('admin_cookie');\n      console.log(tinyUrl());\n      await this.setState({url:tinyUrl()});\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n      console.log(this.state.url);\n      const res = await axios.get(this.state.url+'get-allocations',{\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      //console.log(res.data.delegateAccess.toLowerCase())\n      console.log(res.data);\n     \n\n      await this.setState({loading:false, users: res.data})\n      console.log(this.state.users);\n    }\n\n    async call(obj){\n      const token = this.getCookie('admin_cookie');\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.post(this.state.url+'deallocate-room',obj,\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      }\n       //this.componentDidMount(); \n      )\n      .then(response=>{\n        this.componentDidMount(); \n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n    this.componentDidMount();\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n\n\n\n   \n    render() {\n\n    if(this.state.isloggedin){\n      if(!this.state.viewrooms && this.state.users!==undefined){\n        return (\n          <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n          <MDBTableHead>\n          <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n            <tr>\n              <th>Allocation ID</th>\n              <th>Student ID</th>\n              <th>Room ID</th>\n              <th>Deallocate Room</th>\n              {/* <th>Validity</th>\n              <th>View Consent</th> */}\n              {/* <th>Vacated</th> */}\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n            \n            {\n              \n              this.state.users.map((obj)=>(\n               <tr>\n                  <td>{obj.alloc_id}</td>\n                  <td>{obj.student_id}</td>\n                  <td>{obj.room_id}</td>\n           \n                  {obj.vacated===0 ?  (\n                    <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n                            console.log(obj);\n                              e.preventDefault();\n                              this.setState({room_id:obj.room_id})\n                              this.call(obj)\n                              /* axios.post(this.state.url+'deallocate-room', {room_id:obj.room_id})\n                              .then(response =>\n                                {\n                                  if(response.status==200){\n                                    alert(\"Room Deallocated!\");\n                                  }\n                                  else{\n                                    alert(\"Please Try Again\");\n                                  }\n                                  }\n                              ) */\n                              //this.getData(obj.room_ID)  ;\n\n                          }}\n                      >\n                          Deallocate\n                      </Button>\n                 \n                    </td>\n                  ) :\n                    <td></td>\n                  }\n\n              </tr>  \n             \n             \n              ))\n            }\n   \n          </MDBTableBody>\n        </MDBTable>\n \n        )      \n      }\n     \n    }\n    else{\n        return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n\n    }\n  }\n\nexport default DeallocateRoomsPage;","/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js",["124","125","126","127","128","129","130"],[],"import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport './addtable.css'\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Button from \"react-bootstrap/Button\";\nimport tinyUrl from '../url';\nimport chatIcon from \"./IIITB_logo.png\";\n\n\nclass GetPositiveStudPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get(this.state.url+'get-positiveStudents',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    //async getData(room_id){\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        //console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      //this.setState({viewrooms:true});\n      //console.log(res);\n\n   // }\n\n\n\n    componentDidMount(){\n      this.getUsersData()\n      console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n    }\n\n    async call(obj){\n      const token = this.getCookie('admin_cookie');\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.post(this.state.url+'send-Email',obj,\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      }\n       //this.componentDidMount(); \n      )\n      .then(response=>{\n        if(response.status===200){\n          alert(\"Email sent!\");\n        }\n         this.componentDidMount(); \n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n    .catch(err=>{\n      console.log(err);\n      alert(\"Email not sent\");\n    });\n\n    this.componentDidMount();\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n\n    render() {\n      if(this.state.isloggedin)\n    {\n    if(!this.state.viewrooms){\n          return (\n            <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n            <MDBTableHead>\n            <div className=\"chat_icon_image_wrapper IIITB_logo\">\n        <img src={chatIcon} height={200} width={200} />\n      </div>\n              <tr>\n                <th>Student ID</th>\n                <th>Result</th>\n                <th>Test Date</th>\n                {/* <th>Allocate</th> */}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.users.map((obj)=>(\n                 <tr>\n                    <td>{obj.student_id}</td>\n                    <td>{obj.result}</td>\n                    <td>{obj.testDate}</td>\n                    { <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n  \n                              e.preventDefault();\n                              this.setState({student_id:obj.student_id})\n                              this.call(obj)  ;\n                              \n                          }}\n                      >\n                          Send Email\n                      </Button>\n                    \n                    </td> }\n                    \n  \n                </tr>   \t\t\n                \n                \n                ))\n              }\n      \n            </MDBTableBody>\n          </MDBTable>\n          )\n            }\n          }\n      // const columns = [{  \n      //   Header: 'Student ID',  \n      //   accessor: 'student_id',\n      //  }\n      //  ,{  \n      //   Header: 'Result',  \n      //   accessor: 'result',\n      //  }\n       \n      //  ,{  \n      //   Header: 'Test Date',  \n      //   accessor: 'testDate',\n      //  }\n\n    //     ,{\n    //       Header: 'Allocate',  \n    //     accessor: 'room_id',\n    //    Cell: ({ original }) => (\n    //     <button\n    //       type=\"button\"\n    //       onClick={(e) => {\n    //       console.log(original);\n    //         e.preventDefault();\n    //         window.location.href='http://localhost:8095/get-freerooms/'+original.room_id;\n    //         this.setState({room_id:original.room_id})\n    //         this.getData(original.room_id)  ;\n    //       }}\n    //     >\n    //       Allocate room\n    //     </button>)\n    //       // <td>\n    //       // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n    //       // </td>\n    //     }\n        \n        \n  else\n  {\n    return <Redirect to = {{ pathname: \"/\" }} />;\n  }\n\n    }\n  }\n\nexport default GetPositiveStudPage;","/home/priyanko/covid_quarantine_management_FE/src/url.js",[],[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":17,"column":5,"nodeType":"137","messageId":"138","endLine":17,"endColumn":15},{"ruleId":"135","severity":1,"message":"139","line":19,"column":10,"nodeType":"137","messageId":"138","endLine":19,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":35,"column":9,"nodeType":"142","endLine":35,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":136,"column":36,"nodeType":"145","messageId":"146","endLine":136,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":155,"column":10,"nodeType":"137","messageId":"138","endLine":155,"endColumn":20},{"ruleId":"135","severity":1,"message":"147","line":157,"column":10,"nodeType":"137","messageId":"138","endLine":157,"endColumn":24},{"ruleId":"135","severity":1,"message":"148","line":157,"column":26,"nodeType":"137","messageId":"138","endLine":157,"endColumn":43},{"ruleId":"149","severity":1,"message":"150","line":169,"column":16,"nodeType":"151","endLine":169,"endColumn":41},{"ruleId":"135","severity":1,"message":"152","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":38,"column":22,"nodeType":"155","messageId":"156","endLine":38,"endColumn":37,"fix":"157"},{"ruleId":"158","severity":1,"message":"159","line":63,"column":31,"nodeType":"145","messageId":"160","endLine":63,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":66,"column":38,"nodeType":"145","messageId":"160","endLine":66,"endColumn":40},{"ruleId":"135","severity":1,"message":"161","line":93,"column":16,"nodeType":"137","messageId":"138","endLine":93,"endColumn":21},{"ruleId":"135","severity":1,"message":"162","line":93,"column":22,"nodeType":"137","messageId":"138","endLine":93,"endColumn":30},{"ruleId":"135","severity":1,"message":"163","line":93,"column":31,"nodeType":"137","messageId":"138","endLine":93,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":98,"column":9,"nodeType":"142","endLine":98,"endColumn":56},{"ruleId":"158","severity":1,"message":"159","line":46,"column":27,"nodeType":"145","messageId":"160","endLine":46,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":82,"column":9,"nodeType":"142","endLine":82,"endColumn":56},{"ruleId":"135","severity":1,"message":"164","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":18},{"ruleId":"158","severity":1,"message":"165","line":21,"column":53,"nodeType":"145","messageId":"160","endLine":21,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":31,"column":19,"nodeType":"155","messageId":"156","endLine":31,"endColumn":34,"fix":"166"},{"ruleId":"140","severity":1,"message":"141","line":92,"column":9,"nodeType":"142","endLine":92,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":32,"column":18,"nodeType":"155","messageId":"156","endLine":32,"endColumn":33,"fix":"167"},{"ruleId":"158","severity":1,"message":"159","line":57,"column":29,"nodeType":"145","messageId":"160","endLine":57,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":88,"column":9,"nodeType":"142","endLine":88,"endColumn":56},{"ruleId":"135","severity":1,"message":"168","line":1,"column":37,"nodeType":"137","messageId":"138","endLine":1,"endColumn":43},{"ruleId":"135","severity":1,"message":"169","line":1,"column":45,"nodeType":"137","messageId":"138","endLine":1,"endColumn":60},{"ruleId":"135","severity":1,"message":"148","line":24,"column":26,"nodeType":"137","messageId":"138","endLine":24,"endColumn":43},{"ruleId":"158","severity":1,"message":"165","line":31,"column":16,"nodeType":"145","messageId":"160","endLine":31,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":38,"column":18,"nodeType":"155","messageId":"156","endLine":38,"endColumn":33,"fix":"170"},{"ruleId":"158","severity":1,"message":"159","line":59,"column":29,"nodeType":"145","messageId":"160","endLine":59,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":92,"column":9,"nodeType":"142","endLine":92,"endColumn":56},{"ruleId":"135","severity":1,"message":"171","line":1,"column":9,"nodeType":"137","messageId":"138","endLine":1,"endColumn":17},{"ruleId":"135","severity":1,"message":"172","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"173","line":6,"column":9,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"174","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":32,"column":20,"nodeType":"155","messageId":"156","endLine":32,"endColumn":35,"fix":"175"},{"ruleId":"135","severity":1,"message":"176","line":58,"column":13,"nodeType":"137","messageId":"138","endLine":58,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":101,"column":9,"nodeType":"142","endLine":101,"endColumn":56},{"ruleId":"135","severity":1,"message":"171","line":1,"column":9,"nodeType":"137","messageId":"138","endLine":1,"endColumn":17},{"ruleId":"135","severity":1,"message":"172","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"173","line":7,"column":9,"nodeType":"137","messageId":"138","endLine":7,"endColumn":13},{"ruleId":"135","severity":1,"message":"174","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":37,"column":20,"nodeType":"155","messageId":"156","endLine":37,"endColumn":35,"fix":"177"},{"ruleId":"140","severity":1,"message":"141","line":99,"column":9,"nodeType":"142","endLine":99,"endColumn":56},{"ruleId":"135","severity":1,"message":"171","line":1,"column":9,"nodeType":"137","messageId":"138","endLine":1,"endColumn":17},{"ruleId":"135","severity":1,"message":"172","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"135","severity":1,"message":"173","line":6,"column":9,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"174","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":32,"column":20,"nodeType":"155","messageId":"156","endLine":32,"endColumn":35,"fix":"178"},{"ruleId":"135","severity":1,"message":"176","line":42,"column":13,"nodeType":"137","messageId":"138","endLine":42,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":116,"column":9,"nodeType":"142","endLine":116,"endColumn":56},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'getCookie' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'showMediaIcons' is assigned a value but never used.","'setShowMediaIcons' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'cookie' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useParams' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property split.","MemberExpression","unexpectedWhitespace",{"range":"181","text":"182"},"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'match' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.",{"range":"183","text":"182"},{"range":"184","text":"182"},"'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.",{"range":"185","text":"182"},"'useState' is defined but never used.","'ReactTable' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.",{"range":"186","text":"182"},"'res' is assigned a value but never used.",{"range":"187","text":"182"},{"range":"188","text":"182"},"no-global-assign","no-unsafe-negation",[1202,1204],".",[822,824],[829,831],[946,948],[975,977],[1143,1145],[981,983]]
{"ast":null,"code":"var _jsxFileName = \"/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\"; //import viewEHR from './viewEHR.js';\n\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport Button from \"react-bootstrap/Button\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport tinyUrl from '../url';\nimport './addtable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DeallocateRoomsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      //getEhrResp : false,\n      pid: '',\n      cid: '',\n      Vehr: false,\n      isloggedin: this.getCookie('admin_cookie') !== undefined ? true : false,\n      room_id: '',\n      viewrooms: false\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  async componentDidMount() {\n    const token = this.getCookie('admin_cookie');\n    console.log(tinyUrl());\n    this.setState({\n      url: tinyUrl()\n    }); //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    const res = await axios.get(this.state.url + 'get-allocations', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }); //console.log(res.data.delegateAccess.toLowerCase())\n\n    console.log(res.data);\n    this.setState({\n      loading: false,\n      users: res.data\n    });\n    console.log(this.state.users);\n  }\n\n  async getUsersData() {\n    const token = this.getCookie('admin_cookie');\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    const res2 = await axios.get(this.state.url + 'get-allocations', {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }); //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n\n    console.log(res2.data);\n    this.setState({\n      loading: false,\n      users: res2.data\n    });\n  }\n\n  async getData(room_id) {//const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    //console.log(pid+\" \"+cid)\n    // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n    //   headers: {\n    //       'Authorization': 'doc_123'\n    //   }\n    // })\n    // this.setState({getEhrResp:true});\n    //this.setState({viewrooms:true});\n    //console.log(res);\n  }\n\n  render() {\n    if (this.state.isloggedin) {\n      if (!this.state.viewrooms) {\n        return /*#__PURE__*/_jsxDEV(MDBTable, {\n          striped: true,\n          style: {\n            \"width\": \"80vw\",\n            \"fontSize\": \"1.4rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Allocation ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Room ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Deallocate Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n            children: this.state.users.map(obj => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.alloc_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.student_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.room_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), obj.vacated === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonsize\",\n                  size: \"lg\",\n                  type: \"button\",\n                  onClick: e => {\n                    console.log(obj);\n                    e.preventDefault();\n                    this.setState({\n                      room_id: obj.room_id\n                    });\n                    axios.post(this.state.url + 'deallocate-room', {\n                      room_id: obj.room_id\n                    }).then(response => {\n                      if (response.status == 200) {\n                        alert(\"Room Deallocated!\");\n                      } else {\n                        alert(\"Please Try Again\");\n                      }\n                    }); //this.getData(obj.room_ID)  ;\n                  },\n                  children: \"Deallocate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n}\n\nexport default DeallocateRoomsPage;","map":{"version":3,"sources":["/home/priyanko/covid_quarantine_management_FE/src/components/deallocateRoom.js"],"names":["useState","React","Component","axios","ReactTable","Link","Redirect","NavLink","Button","MDBTable","MDBTableBody","MDBTableHead","tinyUrl","DeallocateRoomsPage","constructor","props","state","users","loading","pid","cid","Vehr","isloggedin","getCookie","undefined","room_id","viewrooms","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","componentDidMount","token","console","log","setState","url","get","headers","data","getUsersData","res2","getData","render","map","obj","alloc_id","student_id","vacated","e","preventDefault","post","then","response","status","alert","pathname"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\"\n//import viewEHR from './viewEHR.js';\nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport Button from \"react-bootstrap/Button\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport tinyUrl from '../url';\nimport './addtable.css'\n\nclass DeallocateRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        //getEhrResp : false,\n        pid : '',\n        cid : '',\n        Vehr : false,\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false,\n        room_id : '',\n        viewrooms:false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n\n    async componentDidMount(){\n      const token = this.getCookie('admin_cookie');\n      console.log(tinyUrl());\n      this.setState({url:tinyUrl()});\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n      const res = await axios.get(this.state.url+'get-allocations',{\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      //console.log(res.data.delegateAccess.toLowerCase())\n      console.log(res.data);\n     \n\n      this.setState({loading:false, users: res.data})\n      console.log(this.state.users);\n    }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get(this.state.url+'get-allocations',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    async getData(room_id){\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        //console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n    // this.setState({getEhrResp:true});\n    //this.setState({viewrooms:true});\n      //console.log(res);\n\n    }\n\n\n\n   \n    render() {\n\n    if(this.state.isloggedin){\n      if(!this.state.viewrooms){\n        return (\n          <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n          <MDBTableHead>\n            <tr>\n              <th>Allocation ID</th>\n              <th>Student ID</th>\n              <th>Room ID</th>\n              <th>Deallocate Room</th>\n              {/* <th>Validity</th>\n              <th>View Consent</th> */}\n              {/* <th>Vacated</th> */}\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n            {\n              this.state.users.map((obj)=>(\n               <tr>\n                  <td>{obj.alloc_id}</td>\n                  <td>{obj.student_id}</td>\n                  <td>{obj.room_id}</td>\n                  {/* <td>{obj.startDate}</td>\n                  <td>{obj.endDate}</td>\n                  <td>{obj.vacated}</td> */}\n                  {/* <td>\n                    <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                        onClick={(e) => {\n\n                            e.preventDefault();\n                            this.setState({pid:obj.patient_id,cid:obj.consent_id})\n                            this.getData(obj.patient_id,obj.consent_id)  ;\n                            this.setState({Vehr:true});\n                        }}\n                    >\n                        View Record\n                    </Button>\n                 \n                  </td> */}\n                  {obj.vacated===0 ?  (\n                    <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n                            console.log(obj);\n                              e.preventDefault();\n                              this.setState({room_id:obj.room_id})\n                              axios.post(this.state.url+'deallocate-room', {room_id:obj.room_id})\n                              .then(response =>\n                                {\n                                  if(response.status==200){\n                                    alert(\"Room Deallocated!\");\n                                  }\n                                  else{\n                                    alert(\"Please Try Again\");\n                                  }\n                                  }\n                              )\n                              //this.getData(obj.room_ID)  ;\n\n                          }}\n                      >\n                          Deallocate\n                      </Button>\n                 \n                    </td>\n                  ) :\n                    <td></td>\n                  }\n\n              </tr>  \n             \n             \n              ))\n            }\n   \n          </MDBTableBody>\n        </MDBTable>\n \n        )      \n      }\n     \n    }\n    else{\n        return <Redirect to = {{ pathname: \"/\" }} />;\n    }\n\n\n    }\n  }\n\nexport default DeallocateRoomsPage;"]},"metadata":{},"sourceType":"module"}
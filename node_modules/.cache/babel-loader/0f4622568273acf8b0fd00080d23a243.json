{"ast":null,"code":"var _jsxFileName = \"/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport './addtable.css';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Button from \"react-bootstrap/Button\";\nimport tinyUrl from '../url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetPositiveStudPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      viewrooms: false,\n      room_id: '',\n      url: '',\n      isloggedin: this.getCookie('admin_cookie') !== undefined ? true : false\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  async getUsersData() {\n    const token = this.getCookie('admin_cookie');\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    const res2 = await axios.get(this.state.url + 'get-positiveStudents', {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }); //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n\n    console.log(res2.data);\n    this.setState({\n      loading: false,\n      users: res2.data\n    });\n  } //async getData(room_id){\n  //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //console.log(pid+\" \"+cid)\n  // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n  //   headers: {\n  //       'Authorization': 'doc_123'\n  //   }\n  // })\n  //this.setState({viewrooms:true});\n  //console.log(res);\n  // }\n\n\n  componentDidMount() {\n    this.getUsersData();\n    console.log(tinyUrl());\n    this.setState({\n      url: tinyUrl()\n    });\n  }\n\n  render() {\n    if (this.state.isloggedin) {\n      if (!this.state.viewrooms) {\n        return /*#__PURE__*/_jsxDEV(MDBTable, {\n          striped: true,\n          style: {\n            \"width\": \"80vw\",\n            \"fontSize\": \"1.4rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Test Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n            children: this.state.users.map(obj => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.student_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.testDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      }\n    } // const columns = [{  \n    //   Header: 'Student ID',  \n    //   accessor: 'student_id',\n    //  }\n    //  ,{  \n    //   Header: 'Result',  \n    //   accessor: 'result',\n    //  }\n    //  ,{  \n    //   Header: 'Test Date',  \n    //   accessor: 'testDate',\n    //  }\n    //     ,{\n    //       Header: 'Allocate',  \n    //     accessor: 'room_id',\n    //    Cell: ({ original }) => (\n    //     <button\n    //       type=\"button\"\n    //       onClick={(e) => {\n    //       console.log(original);\n    //         e.preventDefault();\n    //         window.location.href='http://localhost:8095/get-freerooms/'+original.room_id;\n    //         this.setState({room_id:original.room_id})\n    //         this.getData(original.room_id)  ;\n    //       }}\n    //     >\n    //       Allocate room\n    //     </button>)\n    //       // <td>\n    //       // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n    //       // </td>\n    //     }\n    else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}\n\nexport default GetPositiveStudPage;","map":{"version":3,"sources":["/home/priyanko/covid_quarantine_management_FE/src/components/getpositivestud.js"],"names":["useState","React","Component","axios","ReactTable","Link","Redirect","NavLink","MDBTable","MDBTableBody","MDBTableHead","Button","tinyUrl","GetPositiveStudPage","constructor","props","state","users","loading","viewrooms","room_id","url","isloggedin","getCookie","undefined","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","getUsersData","token","get","res2","headers","console","log","data","setState","componentDidMount","render","map","obj","student_id","result","testDate","pathname"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport './addtable.css'\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Button from \"react-bootstrap/Button\";\nimport tinyUrl from '../url';\n\n\nclass GetPositiveStudPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n        url:'',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get(this.state.url+'get-positiveStudents',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    //async getData(room_id){\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        //console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      //this.setState({viewrooms:true});\n      //console.log(res);\n\n   // }\n\n\n\n    componentDidMount(){\n      this.getUsersData()\n      console.log(tinyUrl());\n    this.setState({url:tinyUrl()});\n    }\n    render() {\n      if(this.state.isloggedin)\n    {\n    if(!this.state.viewrooms){\n          return (\n            <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n            <MDBTableHead>\n              <tr>\n                <th>Student ID</th>\n                <th>Result</th>\n                <th>Test Date</th>\n                {/* <th>Allocate</th> */}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.users.map((obj)=>(\n                 <tr>\n                    <td>{obj.student_id}</td>\n                    <td>{obj.result}</td>\n                    <td>{obj.testDate}</td>\n                    {/* <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n  \n                              e.preventDefault();\n                              this.setState({room_id:obj.room_id})\n                              this.getData(obj.room_id)  ;\n                              \n                          }}\n                      >\n                          Allocate Room\n                      </Button>\n                    \n                    </td> */}\n                    \n  \n                </tr>   \t\t\n                \n                \n                ))\n              }\n      \n            </MDBTableBody>\n          </MDBTable>\n          )\n            }\n          }\n      // const columns = [{  \n      //   Header: 'Student ID',  \n      //   accessor: 'student_id',\n      //  }\n      //  ,{  \n      //   Header: 'Result',  \n      //   accessor: 'result',\n      //  }\n       \n      //  ,{  \n      //   Header: 'Test Date',  \n      //   accessor: 'testDate',\n      //  }\n\n    //     ,{\n    //       Header: 'Allocate',  \n    //     accessor: 'room_id',\n    //    Cell: ({ original }) => (\n    //     <button\n    //       type=\"button\"\n    //       onClick={(e) => {\n    //       console.log(original);\n    //         e.preventDefault();\n    //         window.location.href='http://localhost:8095/get-freerooms/'+original.room_id;\n    //         this.setState({room_id:original.room_id})\n    //         this.getData(original.room_id)  ;\n    //       }}\n    //     >\n    //       Allocate room\n    //     </button>)\n    //       // <td>\n    //       // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n    //       // </td>\n    //     }\n        \n        \n  else\n  {\n    return <Redirect to = {{ pathname: \"/\" }} />;\n  }\n\n    }\n  }\n\nexport default GetPositiveStudPage;"]},"metadata":{},"sourceType":"module"}
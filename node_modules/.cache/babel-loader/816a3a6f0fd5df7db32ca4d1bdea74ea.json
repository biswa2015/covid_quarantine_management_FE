{"ast":null,"code":"var _jsxFileName = \"/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport './addtable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FreeRoomsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      viewrooms: false,\n      room_id: '',\n      isloggedin: this.getCookie('admin_cookie') !== undefined ? true : false\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  } //   async getUsersData(){\n  //     const token = this.getCookie('admin_cookie');\n  //     const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //      const res2 = await axios.get('http://localhost:8095/get-freerooms')\n  //      {\n  //       headers: {\n  //         \"Authorization\" : `Bearer ${token}`\n  //       }\n  //     })\n  //     // const headers = {\n  //     //   \"Authorization\" : `Bearer ${token}`\n  //  // };\n  //      console.log(res2.data)\n  //     this.setState({loading:false, users: res2.data})\n  //   }\n\n\n  async getUsersData() {\n    const token = this.getCookie('admin_cookie');\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    const res2 = await axios.get('http://localhost:8102/get-freerooms', {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }); //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n\n    console.log(res2.data);\n    this.setState({\n      loading: false,\n      users: res2.data\n    });\n  }\n\n  async getData(room_id) {\n    // const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    //   console.log(pid+\" \"+cid)\n    // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n    //   headers: {\n    //       'Authorization': 'doc_123'\n    //   }\n    // })\n    this.setState({\n      viewrooms: true\n    }); //console.log(res);\n  }\n\n  componentDidMount() {\n    this.getUsersData();\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Available Room ID',\n      accessor: 'room_id'\n    }, {\n      Header: 'Available Room Numbers',\n      accessor: 'roomNum'\n    }, {\n      Header: 'Available Floor Numbers',\n      accessor: 'floorNum'\n    }, {\n      Header: 'Allocate',\n      accessor: 'room_id',\n      Cell: _ref => {\n        let {\n          original\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => {\n            console.log(original);\n            e.preventDefault(); //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n\n            this.setState({\n              room_id: original.room_id\n            });\n            this.getData(original.room_id);\n          },\n          children: \"Allocate room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this);\n      } // <td>\n      // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n      // </td>\n\n    }];\n\n    if (this.state.isloggedin) {\n      if (!this.state.viewrooms) {\n        return /*#__PURE__*/_jsxDEV(MDBTable, {\n          striped: true,\n          style: {\n            \"width\": \"80vw\",\n            \"fontSize\": \"1.4rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Available Room ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Available Room Numbers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Available Floor Numbers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Allocate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n            children: this.state.users.map(obj => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.room_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.roomNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: obj.floorNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonsize\",\n                  size: \"lg\",\n                  type: \"button\",\n                  onClick: e => {\n                    e.preventDefault();\n                    this.setState({\n                      room_id: original.room_id\n                    });\n                    this.getData(original.room_id);\n                  },\n                  children: \"Allocate Room\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/allocate-room/\" + this.state.room_id\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 14\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}\n\nexport default FreeRoomsPage;","map":{"version":3,"sources":["/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js"],"names":["useState","React","Component","axios","ReactTable","Link","Redirect","NavLink","MDBTable","MDBTableBody","MDBTableHead","FreeRoomsPage","constructor","props","state","users","loading","viewrooms","room_id","isloggedin","getCookie","undefined","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","getUsersData","token","get","res2","headers","console","log","data","setState","getData","componentDidMount","render","columns","Header","accessor","Cell","original","e","preventDefault","map","obj","roomNum","floorNum","pathname"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,+BAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,UAArD;AACA,OAAO,gBAAP;;;AAGA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAClCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAC,IAFG;AAGXC,MAAAA,SAAS,EAAG,KAHD;AAIXC,MAAAA,OAAO,EAAG,EAJC;AAKXC,MAAAA,UAAU,EAAG,KAAKC,SAAL,CAAe,cAAf,MAAiCC,SAAjC,GAA6C,IAA7C,GAAoD;AALtD,KAAb;AAOD;;AAEDD,EAAAA,SAAS,CAACE,KAAD,EAAQ;AACf,UAAMC,IAAI,GAAGD,KAAK,GAAG,GAArB;AACA,UAAME,QAAQ,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAnC,CAFe,CAEuC;;AACtD,UAAMC,IAAI,GAAGJ,QAAQ,CAAEK,KAAV,CAAgB,IAAhB,CAAb;AACA,QAAIC,GAAJ;AACAF,IAAAA,IAAI,CAACG,OAAL,CAAaC,GAAG,IAAI;AAChB,UAAIA,GAAG,CAACC,OAAJ,CAAYV,IAAZ,MAAsB,CAA1B,EAA6BO,GAAG,GAAGE,GAAG,CAACE,SAAJ,CAAcX,IAAI,CAACY,MAAnB,CAAN;AAChC,KAFD;AAGA,WAAOL,GAAP;AACD,GArBiC,CAuBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEoB,QAAZM,YAAY,GAAE;AAClB,UAAMC,KAAK,GAAG,KAAKjB,SAAL,CAAe,cAAf,CAAd;AACA,UAAMU,GAAG,GAAG,MAAM3B,KAAK,CAACmC,GAAN,CAAU,4CAAV,CAAlB;AACC,UAAMC,IAAI,GAAG,MAAMpC,KAAK,CAACmC,GAAN,CAAU,qCAAV,EACnB;AACCE,MAAAA,OAAO,EAAE;AACP,yBAAmB,UAASH,KAAM;AAD3B;AADV,KADmB,CAAnB,CAHiB,CASpB;AACA;AACA;;AACGI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACD,SAAKC,QAAL,CAAc;AAAC5B,MAAAA,OAAO,EAAC,KAAT;AAAgBD,MAAAA,KAAK,EAAEwB,IAAI,CAACI;AAA5B,KAAd;AACD;;AAEY,QAAPE,OAAO,CAAC3B,OAAD,EAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAK0B,QAAL,CAAc;AAAC3B,MAAAA,SAAS,EAAC;AAAX,KAAd,EARoB,CASpB;AAEF;;AAIA6B,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,YAAL;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAAC;AACfC,MAAAA,MAAM,EAAE,mBADO;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAD,EAIf;AACCD,MAAAA,MAAM,EAAE,wBADT;AAECC,MAAAA,QAAQ,EAAE;AAFX,KAJe,EASd;AACAD,MAAAA,MAAM,EAAE,yBADR;AAEAC,MAAAA,QAAQ,EAAE;AAFV,KATc,EAad;AACAD,MAAAA,MAAM,EAAE,UADR;AAEFC,MAAAA,QAAQ,EAAE,SAFR;AAGHC,MAAAA,IAAI,EAAE;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACL;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAGC,CAAD,IAAO;AAChBZ,YAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACEC,YAAAA,CAAC,CAACC,cAAF,GAFc,CAGd;;AACA,iBAAKV,QAAL,CAAc;AAAC1B,cAAAA,OAAO,EAACkC,QAAQ,CAAClC;AAAlB,aAAd;AACA,iBAAK2B,OAAL,CAAaO,QAAQ,CAAClC,OAAtB;AACD,WARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK;AAAA,OAHH,CAgBA;AACA;AACA;;AAlBA,KAbc,CAAhB;;AAoCF,QAAG,KAAKJ,KAAL,CAAWK,UAAd,EACA;AACA,UAAG,CAAC,KAAKL,KAAL,CAAWG,SAAf,EAAyB;AACnB,4BACE,QAAC,QAAD;AAAU,UAAA,OAAO,MAAjB;AAAkB,UAAA,KAAK,EAAE;AAAC,qBAAQ,MAAT;AAAgB,wBAAW;AAA3B,WAAzB;AAAA,kCACA,QAAC,YAAD;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADA,eASA,QAAC,YAAD;AAAA,sBAEI,KAAKH,KAAL,CAAWC,KAAX,CAAiBwC,GAAjB,CAAsBC,GAAD,iBACpB;AAAA,sCACG;AAAA,0BAAKA,GAAG,CAACtC;AAAT;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG;AAAA,0BAAKsC,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,sBAFH,eAGG;AAAA,0BAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,sBAHH,eAIG;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAG,YAApB;AAAiC,kBAAA,IAAI,EAAC,IAAtC;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AACI,kBAAA,OAAO,EAAGL,CAAD,IAAO;AAEZA,oBAAAA,CAAC,CAACC,cAAF;AACA,yBAAKV,QAAL,CAAc;AAAC1B,sBAAAA,OAAO,EAACkC,QAAQ,CAAClC;AAAlB,qBAAd;AACA,yBAAK2B,OAAL,CAAaO,QAAQ,CAAClC,OAAtB;AAEH,mBAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AAFJ;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA2CL,OA5CD,MA6CI;AAEF,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAI;AAAEyC,YAAAA,QAAQ,EAAE,oBAAoB,KAAK7C,KAAL,CAAWI;AAA3C;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAED;AACF,KApDC,MAsDF;AACE,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAI;AAAEyC,UAAAA,QAAQ,EAAE;AAAZ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEE;;AAxKiC;;AA2KtC,eAAehD,aAAf","sourcesContent":["import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport './addtable.css'\n\n\nclass FreeRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n        isloggedin : this.getCookie('admin_cookie')!==undefined ? true : false\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n  //   async getUsersData(){\n  //     const token = this.getCookie('admin_cookie');\n  //     const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //      const res2 = await axios.get('http://localhost:8095/get-freerooms')\n  //      {\n  //       headers: {\n  //         \"Authorization\" : `Bearer ${token}`\n  //       }\n  //     })\n  //     // const headers = {\n  //     //   \"Authorization\" : `Bearer ${token}`\n  //  // };\n  //      console.log(res2.data)\n  //     this.setState({loading:false, users: res2.data})\n  //   }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get('http://localhost:8102/get-freerooms',\n       {\n        headers: {\n          \"Authorization\" : `Bearer ${token}`\n        }\n      })\n    //   const headers = {\n    //     \"Authorization\" : `Bearer ${token}`\n    // };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    async getData(room_id){\n      // const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n      //   console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      this.setState({viewrooms:true});\n      //console.log(res);\n\n   }\n\n\n\n    componentDidMount(){\n      this.getUsersData()\n    }\n    render() {\n      const columns = [{  \n        Header: 'Available Room ID',  \n        accessor: 'room_id',\n       },\n       {  \n        Header: 'Available Room Numbers',  \n        accessor: 'roomNum',\n       }\n       \n       ,{  \n        Header: 'Available Floor Numbers',  \n        accessor: 'floorNum',\n       }\n       ,{\n        Header: 'Allocate',  \n      accessor: 'room_id',\n     Cell: ({ original }) => (\n      <button\n        type=\"button\"\n        onClick={(e) => {\n        console.log(original);\n          e.preventDefault();\n          //window.location.href='http://localhost:8081/get-ehr/'+original.patient_id+'/'+original.consent_id;\n          this.setState({room_id:original.room_id})\n          this.getData(original.room_id)  ;\n        }}\n      >\n        Allocate room\n      </button>)\n        // <td>\n        // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n        // </td>\n      }\n        \n        \n    ]\n    if(this.state.isloggedin)\n    {\n    if(!this.state.viewrooms){\n          return (\n            <MDBTable striped style={{\"width\":\"80vw\",\"fontSize\":\"1.4rem\"}}>\n            <MDBTableHead>\n              <tr>\n                <th>Available Room ID</th>\n                <th>Available Room Numbers</th>\n                <th>Available Floor Numbers</th>\n                <th>Allocate</th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.users.map((obj)=>(\n                 <tr>\n                    <td>{obj.room_id}</td>\n                    <td>{obj.roomNum}</td>\n                    <td>{obj.floorNum}</td>\n                    <td>\n                      <Button className = \"buttonsize\" size=\"lg\" type=\"button\"\n                          onClick={(e) => {\n  \n                              e.preventDefault();\n                              this.setState({room_id:original.room_id})\n                              this.getData(original.room_id)  ;\n                              \n                          }}\n                      >\n                          Allocate Room\n                      </Button>\n                    \n                    </td>\n                    \n  \n                </tr>   \t\t\n                \n                \n                ))\n              }\n      \n            </MDBTableBody>\n          </MDBTable>\n          )\n     \n    }\n    else{\n      \n      return <Redirect to = {{ pathname: \"/allocate-room/\" + this.state.room_id }} />;\n      \n    }\n  }\n  else\n  {\n    return <Redirect to = {{ pathname: \"/\" }} />;\n  }\n\n    }\n  }\n\nexport default FreeRoomsPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js\";\nimport { useState } from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FreeRoomsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      viewrooms: false,\n      room_id: ''\n    };\n  }\n\n  getCookie(cName) {\n    const name = cName + \"=\";\n    const cDecoded = decodeURIComponent(document.cookie); //to be careful\n\n    const cArr = cDecoded.split('; ');\n    let res;\n    cArr.forEach(val => {\n      if (val.indexOf(name) === 0) res = val.substring(name.length);\n    });\n    return res;\n  }\n\n  async getUsersData() {\n    const token = this.getCookie('admin_cookie');\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    const res2 = await axios.get('http://localhost:8102/get-freerooms'); //  ,{\n    //   headers: {\n    //     \"Authorization\" : `Bearer ${token}`\n    //   }\n    // })\n\n    const headers = {\n      \"Authorization\": `Bearer ${token}`\n    };\n    console.log(res2.data);\n    this.setState({\n      loading: false,\n      users: res2.data\n    });\n  } //async getData(room_id){\n  //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  //console.log(pid+\" \"+cid)\n  // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n  //   headers: {\n  //       'Authorization': 'doc_123'\n  //   }\n  // })\n  //this.setState({viewrooms:true});\n  //console.log(res);\n  // }\n\n\n  componentDidMount() {\n    this.getUsersData();\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Available Room Numbers',\n      accessor: 'room_id'\n    }, {\n      Header: 'Allocate',\n      accessor: 'room_id',\n      Cell: _ref => {\n        let {\n          original\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => {\n            console.log(original);\n            e.preventDefault();\n            window.location.href = 'http://localhost:8102/get-freerooms/' + original.room_id;\n            this.setState({\n              room_id: original.room_id\n            });\n            this.getData(original.room_id);\n          },\n          children: \"Allocate room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this);\n      } // <td>\n      // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n      // </td>\n\n    }];\n\n    if (!this.state.viewrooms) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactTable, {\n          data: this.state.users,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/allocate-room/\" + this.state.room_id\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default FreeRoomsPage;","map":{"version":3,"sources":["/home/priyanko/covid_quarantine_management_FE/src/components/freeRoom.js"],"names":["useState","React","Component","axios","ReactTable","Link","Redirect","NavLink","FreeRoomsPage","constructor","props","state","users","loading","viewrooms","room_id","getCookie","cName","name","cDecoded","decodeURIComponent","document","cookie","cArr","split","res","forEach","val","indexOf","substring","length","getUsersData","token","get","res2","headers","console","log","data","setState","componentDidMount","render","columns","Header","accessor","Cell","original","e","preventDefault","window","location","href","getData","marginTop","pathname"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \nimport {Link} from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport { NavLink } from 'react-bootstrap';\n\n\nclass FreeRoomsPage extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        users: [],\n        loading:true,\n        viewrooms : false,\n        room_id : '',\n      }\n    }\n\n    getCookie(cName) {\n      const name = cName + \"=\";\n      const cDecoded = decodeURIComponent(document.cookie); //to be careful\n      const cArr = cDecoded .split('; ');\n      let res;\n      cArr.forEach(val => {\n          if (val.indexOf(name) === 0) res = val.substring(name.length);\n      })\n      return res;\n    }\n\n    async getUsersData(){\n      const token = this.getCookie('admin_cookie');\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n       const res2 = await axios.get('http://localhost:8102/get-freerooms')\n      //  ,{\n      //   headers: {\n      //     \"Authorization\" : `Bearer ${token}`\n      //   }\n      // })\n      const headers = {\n        \"Authorization\" : `Bearer ${token}`\n    };\n       console.log(res2.data)\n      this.setState({loading:false, users: res2.data})\n    }\n\n    //async getData(room_id){\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        //console.log(pid+\" \"+cid)\n      // const res = await axios.get('http://localhost:8081/get-ehr/'+pid+'/'+cid,{  \n      //   headers: {\n      //       'Authorization': 'doc_123'\n      //   }\n      // })\n      //this.setState({viewrooms:true});\n      //console.log(res);\n\n   // }\n\n\n\n    componentDidMount(){\n      this.getUsersData()\n    }\n    render() {\n      const columns = [{  \n        Header: 'Available Room Numbers',  \n        accessor: 'room_id',\n       }\n        ,{\n          Header: 'Allocate',  \n        accessor: 'room_id',\n       Cell: ({ original }) => (\n        <button\n          type=\"button\"\n          onClick={(e) => {\n          console.log(original);\n            e.preventDefault();\n            window.location.href='http://localhost:8102/get-freerooms/'+original.room_id;\n            this.setState({room_id:original.room_id})\n            this.getData(original.room_id)  ;\n          }}\n        >\n          Allocate room\n        </button>)\n          // <td>\n          // <NavLink to={\"/view-ehr/\"+original.patient_id+'/'+original.consent_id}> View Record </NavLink>\n          // </td>\n        }\n        \n        \n    ]\n    if(!this.state.viewrooms){\n      return (\n        <div style={{marginTop:\"200px\"}}>\n          <ReactTable  \n          data={this.state.users}  \n          columns={columns}  \n          />\n        </div>\n\n      )      \n    }\n    else{\n      \n      return <Redirect to = {{ pathname: \"/allocate-room/\" + this.state.room_id }} />;\n      \n    }\n\n    }\n  }\n\nexport default FreeRoomsPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\n\nvar defaultButton = function defaultButton(props) {\n  return React.createElement('button', _extends({\n    type: 'button'\n  }, props, {\n    className: '-btn'\n  }), props.children);\n};\n\nvar ReactTablePagination = function (_Component) {\n  _inherits(ReactTablePagination, _Component);\n\n  function ReactTablePagination(props) {\n    _classCallCheck(this, ReactTablePagination);\n\n    var _this = _possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this, props));\n\n    _this.getSafePage = _this.getSafePage.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.applyPage = _this.applyPage.bind(_this);\n    _this.state = {\n      page: props.page\n    };\n    return _this;\n  }\n\n  _createClass(ReactTablePagination, [{\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.page !== nextProps.page) {\n        this.setState({\n          page: nextProps.page\n        });\n      }\n    }\n  }, {\n    key: 'getSafePage',\n    value: function getSafePage(page) {\n      if (Number.isNaN(page)) {\n        page = this.props.page;\n      }\n\n      return Math.min(Math.max(page, 0), this.props.pages - 1);\n    }\n  }, {\n    key: 'changePage',\n    value: function changePage(page) {\n      page = this.getSafePage(page);\n      this.setState({\n        page: page\n      });\n\n      if (this.props.page !== page) {\n        this.props.onPageChange(page);\n      }\n    }\n  }, {\n    key: 'applyPage',\n    value: function applyPage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var page = this.state.page;\n      this.changePage(page === '' ? this.props.page : page);\n    }\n  }, {\n    key: 'getPageJumpProperties',\n    value: function getPageJumpProperties() {\n      var _this2 = this;\n\n      return {\n        onKeyPress: function onKeyPress(e) {\n          if (e.which === 13 || e.keyCode === 13) {\n            _this2.applyPage();\n          }\n        },\n        onBlur: this.applyPage,\n        value: this.state.page === '' ? '' : this.state.page + 1,\n        onChange: function onChange(e) {\n          var val = e.target.value;\n          var page = val - 1;\n\n          if (val === '') {\n            return _this2.setState({\n              page: val\n            });\n          }\n\n          _this2.setState({\n            page: _this2.getSafePage(page)\n          });\n        },\n        inputType: this.state.page === '' ? 'text' : 'number',\n        pageJumpText: this.props.pageJumpText\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          page = _props.page,\n          showPageSizeOptions = _props.showPageSizeOptions,\n          pageSizeOptions = _props.pageSizeOptions,\n          pageSize = _props.pageSize,\n          showPageJump = _props.showPageJump,\n          canPrevious = _props.canPrevious,\n          canNext = _props.canNext,\n          onPageSizeChange = _props.onPageSizeChange,\n          className = _props.className,\n          PreviousComponent = _props.PreviousComponent,\n          NextComponent = _props.NextComponent,\n          renderPageJump = _props.renderPageJump,\n          renderCurrentPage = _props.renderCurrentPage,\n          renderTotalPagesCount = _props.renderTotalPagesCount,\n          renderPageSizeOptions = _props.renderPageSizeOptions;\n      return React.createElement('div', {\n        className: classnames(className, '-pagination'),\n        style: this.props.style\n      }, React.createElement('div', {\n        className: '-previous'\n      }, React.createElement(PreviousComponent, {\n        onClick: function onClick() {\n          if (!canPrevious) return;\n\n          _this3.changePage(page - 1);\n        },\n        disabled: !canPrevious\n      }, this.props.previousText)), React.createElement('div', {\n        className: '-center'\n      }, React.createElement('span', {\n        className: '-pageInfo'\n      }, this.props.pageText, ' ', showPageJump ? renderPageJump(this.getPageJumpProperties()) : renderCurrentPage(page), ' ', this.props.ofText, ' ', renderTotalPagesCount(pages)), showPageSizeOptions && renderPageSizeOptions({\n        pageSize: pageSize,\n        rowsSelectorText: this.props.rowsSelectorText,\n        pageSizeOptions: pageSizeOptions,\n        onPageSizeChange: onPageSizeChange,\n        rowsText: this.props.rowsText\n      })), React.createElement('div', {\n        className: '-next'\n      }, React.createElement(NextComponent, {\n        onClick: function onClick() {\n          if (!canNext) return;\n\n          _this3.changePage(page + 1);\n        },\n        disabled: !canNext\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return ReactTablePagination;\n}(Component);\n\nReactTablePagination.defaultProps = {\n  PreviousComponent: defaultButton,\n  NextComponent: defaultButton,\n  renderPageJump: function renderPageJump(_ref) {\n    var onChange = _ref.onChange,\n        value = _ref.value,\n        onBlur = _ref.onBlur,\n        onKeyPress = _ref.onKeyPress,\n        inputType = _ref.inputType,\n        pageJumpText = _ref.pageJumpText;\n    return React.createElement('div', {\n      className: '-pageJump'\n    }, React.createElement('input', {\n      'aria-label': pageJumpText,\n      type: inputType,\n      onChange: onChange,\n      value: value,\n      onBlur: onBlur,\n      onKeyPress: onKeyPress\n    }));\n  },\n  renderCurrentPage: function renderCurrentPage(page) {\n    return React.createElement('span', {\n      className: '-currentPage'\n    }, page + 1);\n  },\n  renderTotalPagesCount: function renderTotalPagesCount(pages) {\n    return React.createElement('span', {\n      className: '-totalPages'\n    }, pages || 1);\n  },\n  renderPageSizeOptions: function renderPageSizeOptions(_ref2) {\n    var pageSize = _ref2.pageSize,\n        pageSizeOptions = _ref2.pageSizeOptions,\n        rowsSelectorText = _ref2.rowsSelectorText,\n        onPageSizeChange = _ref2.onPageSizeChange,\n        rowsText = _ref2.rowsText;\n    return React.createElement('span', {\n      className: 'select-wrap -pageSizeOptions'\n    }, React.createElement('select', {\n      'aria-label': rowsSelectorText,\n      onChange: function onChange(e) {\n        return onPageSizeChange(Number(e.target.value));\n      },\n      value: pageSize\n    }, pageSizeOptions.map(function (option, i) {\n      return (// eslint-disable-next-line react/no-array-index-key\n        React.createElement('option', {\n          key: i,\n          value: option\n        }, option + ' ' + rowsText)\n      );\n    })));\n  }\n};\nexport default ReactTablePagination;","map":{"version":3,"mappings":"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","names":["React","Component","classnames","defaultButton","type","props","className","children","ReactTablePagination","_classCallCheck","_this","getSafePage","bind","changePage","applyPage","state","page","nextProps","setState","Number","isNaN","Math","min","max","pages","onPageChange","e","preventDefault","onKeyPress","which","keyCode","_this2","onBlur","value","onChange","val","target","inputType","pageJumpText","showPageSizeOptions","pageSizeOptions","pageSize","showPageJump","canPrevious","canNext","onPageSizeChange","PreviousComponent","NextComponent","renderPageJump","renderCurrentPage","renderTotalPagesCount","renderPageSizeOptions","style","onClick","_this3","disabled","previousText","pageText","getPageJumpProperties","ofText","rowsSelectorText","rowsText","nextText","defaultProps","map","option","i","key"],"sources":["/home/priyanko/covid_quarantine_management_FE/node_modules/react-table-6/src/pagination.js"],"sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n\nconst defaultButton = props => (\n  <button type=\"button\" {...props} className=\"-btn\">\n    {props.children}\n  </button>\n)\n\nexport default class ReactTablePagination extends Component {\n  static defaultProps = {\n    PreviousComponent: defaultButton,\n    NextComponent: defaultButton,\n    renderPageJump: ({\n      onChange, value, onBlur, onKeyPress, inputType, pageJumpText,\n    }) => (\n      <div className=\"-pageJump\">\n        <input\n          aria-label={pageJumpText}\n          type={inputType}\n          onChange={onChange}\n          value={value}\n          onBlur={onBlur}\n          onKeyPress={onKeyPress}\n        />\n      </div>\n    ),\n    renderCurrentPage: page => <span className=\"-currentPage\">{page + 1}</span>,\n    renderTotalPagesCount: pages => <span className=\"-totalPages\">{pages || 1}</span>,\n    renderPageSizeOptions: ({\n      pageSize,\n      pageSizeOptions,\n      rowsSelectorText,\n      onPageSizeChange,\n      rowsText,\n    }) => (\n      <span className=\"select-wrap -pageSizeOptions\">\n        <select\n          aria-label={rowsSelectorText}\n          onChange={e => onPageSizeChange(Number(e.target.value))}\n          value={pageSize}\n        >\n          {pageSizeOptions.map((option, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <option key={i} value={option}>\n              {`${option} ${rowsText}`}\n            </option>\n          ))}\n        </select>\n      </span>\n    ),\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.getSafePage = this.getSafePage.bind(this)\n    this.changePage = this.changePage.bind(this)\n    this.applyPage = this.applyPage.bind(this)\n\n    this.state = {\n      page: props.page,\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (this.props.page !== nextProps.page) {\n      this.setState({ page: nextProps.page })\n    }\n  }\n\n  getSafePage (page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page\n    }\n    return Math.min(Math.max(page, 0), this.props.pages - 1)\n  }\n\n  changePage (page) {\n    page = this.getSafePage(page)\n    this.setState({ page })\n    if (this.props.page !== page) {\n      this.props.onPageChange(page)\n    }\n  }\n\n  applyPage (e) {\n    if (e) {\n      e.preventDefault()\n    }\n    const page = this.state.page\n    this.changePage(page === '' ? this.props.page : page)\n  }\n\n  getPageJumpProperties () {\n    return {\n      onKeyPress: e => {\n        if (e.which === 13 || e.keyCode === 13) {\n          this.applyPage()\n        }\n      },\n      onBlur: this.applyPage,\n      value: this.state.page === '' ? '' : this.state.page + 1,\n      onChange: e => {\n        const val = e.target.value\n        const page = val - 1\n        if (val === '') {\n          return this.setState({ page: val })\n        }\n        this.setState({ page: this.getSafePage(page) })\n      },\n      inputType: this.state.page === '' ? 'text' : 'number',\n      pageJumpText: this.props.pageJumpText,\n    }\n  }\n\n  render () {\n    const {\n      // Computed\n      pages,\n      // Props\n      page,\n      showPageSizeOptions,\n      pageSizeOptions,\n      pageSize,\n      showPageJump,\n      canPrevious,\n      canNext,\n      onPageSizeChange,\n      className,\n      PreviousComponent,\n      NextComponent,\n      renderPageJump,\n      renderCurrentPage,\n      renderTotalPagesCount,\n      renderPageSizeOptions,\n    } = this.props\n\n    return (\n      <div className={classnames(className, '-pagination')} style={this.props.style}>\n        <div className=\"-previous\">\n          <PreviousComponent\n            onClick={() => {\n              if (!canPrevious) return\n              this.changePage(page - 1)\n            }}\n            disabled={!canPrevious}\n          >\n            {this.props.previousText}\n          </PreviousComponent>\n        </div>\n        <div className=\"-center\">\n          <span className=\"-pageInfo\">\n            {this.props.pageText}{' '}\n            {showPageJump ? renderPageJump(this.getPageJumpProperties()) : renderCurrentPage(page)}{' '}\n            {this.props.ofText} {renderTotalPagesCount(pages)}\n          </span>\n          {showPageSizeOptions &&\n            renderPageSizeOptions({\n              pageSize,\n              rowsSelectorText: this.props.rowsSelectorText,\n              pageSizeOptions,\n              onPageSizeChange,\n              rowsText: this.props.rowsText,\n            })}\n        </div>\n        <div className=\"-next\">\n          <NextComponent\n            onClick={() => {\n              if (!canNext) return\n              this.changePage(page + 1)\n            }}\n            disabled={!canNext}\n          >\n            {this.props.nextText}\n          </NextComponent>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}